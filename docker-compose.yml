version: "3.8"
services:

    traefik:
        image: "traefik:v2.4"
        container_name: "traefik"
        command:
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=true"
            - "--entrypoints.web.address=:80"
            - "--entrypoints.web-secure.address=:443"
            - "--entrypoints.web.forwardedheaders.insecure"
            - "--entrypoints.web.proxyprotocol.insecure"
            - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
            - "--certificatesresolvers.letsencrypt.acme.email=adrixop95@me.com"
            - "--certificatesresolvers.letsencrypt.acme.storage=/ssl/acme.json"
            - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
        labels:
            - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
            - "traefik.http.routers.http-catchall.entrypoints=web"
            - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
            - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        ports:
            - "80:80"
            - "443:443"
        networks:
            - fastapi_proxy
        restart: unless-stopped

    fastapi-proxy:
        build:
            dockerfile: Dockerfile
            context: .
        labels:
            - traefik.enable=true
            - traefik.http.routers.fastapi-proxy.rule=Host(`fastapi.localhost`)
            - traefik.http.services.fastapi-proxy.loadbalancer.server.port=8000
            - traefik.http.routers.fastapi-proxy.entrypoints=web-secure
            - traefik.http.routers.fastapi-proxy.tls=true
            - traefik.http.routers.fastapi-proxy.tls.certresolver=letsencrypt
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
        networks:
            - fastapi_proxy
        restart: unless-stopped

    nginx1:
        build:
            dockerfile: Dockerfile
            context: nginx/.
        labels:
            - traefik.enable=true
            - traefik.http.routers.nginx1.rule=Host(`nginx1.localhost`)
            - traefik.http.services.nginx1.loadbalancer.server.port=80
            - traefik.http.routers.nginx1.entrypoints=web-secure
            - traefik.http.routers.nginx1.tls=true
            - traefik.http.routers.nginx1.tls.certresolver=letsencrypt
        networks:
            - fastapi_proxy
        restart: unless-stopped

    nginx2:
        build:
            dockerfile: Dockerfile
            context: nginx/.
        labels:
            - traefik.enable=true
            - traefik.http.routers.nginx2.rule=Host(`nginx2.localhost`)
            - traefik.http.services.nginx2.loadbalancer.server.port=80
            - traefik.http.routers.nginx2.entrypoints=web-secure
            - traefik.http.routers.nginx2.tls=true
            - traefik.http.routers.nginx2.tls.certresolver=letsencrypt
        networks:
            - fastapi_proxy
        restart: unless-stopped

networks:
  fastapi_proxy:
    name: fastapi_proxy